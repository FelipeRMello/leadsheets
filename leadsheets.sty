% --------------------------------------------------------------------------
\RequirePackage{expl3}
\ProvidesExplPackage{leadsheets}
  {2014/07/12}
  {0.0}
  {songbook~ (draft)~ (CN)}

% --------------------------------------------------------------------------
% required packages:
\RequirePackage{chordnames,xparse,translations}

% --------------------------------------------------------------------------
% messages:
\msg_new:nnn {leadsheets} {unknown-verse-type}
  {
    The~ verse~ type~ `#1'~ is~ unknown.~ Using~ `verse'~ instead~
    \msg_line_context:
  }

% --------------------------------------------------------------------------
% variants of kernel functions:
\cs_generate_variant:Nn \tl_if_eq:nnTF       { xx , V }
\cs_generate_variant:Nn \seq_set_split:Nnn   { Nnx }
\cs_generate_variant:Nn \prop_item:Nn        { NV }
\cs_generate_variant:Nn \seq_item:Nn         { cV }
\cs_generate_variant:Nn \int_to_arabic:n     { V }
\cs_generate_variant:Nn \tl_replace_once:Nnn { NnV }
\cs_generate_variant:Nn \prop_gput:Nnn       { cxx }

% --------------------------------------------------------------------------
% temporary variables:
\tl_new:N   \l__leadsheets_tmpa_tl
\tl_new:N   \l__leadsheets_tmpb_tl
\tl_new:N   \l__leadsheets_tmpc_tl
\bool_new:N \l__leadsheets_tmpa_bool
\dim_new:N  \l__leadsheets_tmpa_dim
\seq_new:N  \l__leadsheets_tmpa_seq
\seq_new:N  \l__leadsheets_tmpb_seq
\int_new:N  \l__leadsheets_tmpa_int
\int_new:N  \l__leadsheets_tmpb_int
\int_new:N  \l__leadsheets_tmpc_int

% --------------------------------------------------------------------------
% variables:
\tl_new:N    \l__leadsheets_songtext_format_tl
\tl_new:N    \l__leadsheets_song_format_tl
\tl_new:N    \l__leadsheets_current_song_tl
\tl_new:N    \l__leadsheets_songtitle_template_tl
\tl_new:N    \l__leadsheets_verse_type_tl
\tl_set:Nn   \l__leadsheets_verse_type_tl {verse}
\tl_new:N    \l__leadsheets_verse_format_tl
\tl_new:N    \l__leadsheets_transpose_steps_tl
\tl_new:N    \l__leadsheets_enharmonic_tl

\bool_new:N  \l__leadsheets_print_selected_bool
\bool_new:N  \l__leadsheets_chord_gobble_after_bool
\bool_new:N  \l__leadsheets_verse_numbered_bool
\bool_new:N  \l__leadsheets_verse_remember_bool
\bool_new:N  \l__leadsheets_smash_chords_bool
\bool_new:N  \g__leadsheets_smash_next_chord_bool
\bool_new:N  \l__leadsheets_transpose_bool
\bool_new:N  \l__leadsheets_enharmonic_bool

\clist_new:N \l__leadsheets_print_tags_clist

\prop_new:N  \l__leadsheets_songtitle_template_prop
\prop_new:N  \l__leadsheets_duplicate_properties_prop
\prop_new:N  \l__leadsheets_pitches_prop
\prop_new:N  \l__leadsheets_prefer_key_prop

\seq_new:N   \l__leadsheets_defined_songs_seq
\seq_new:N   \l__leadsheets_songs_print_seq
\seq_new:N   \l__leadsheets_song_properties_seq
\seq_new:N   \l__leadsheets_sharps_seq
\seq_new:N   \l__leadsheets_flats_seq

\int_new:N   \g__leadsheets_song_id_int

\dim_new:N   \l__leadsheets_empty_chord_dim
\dim_set:Nn  \l__leadsheets_empty_chord_dim {1em}

% --------------------------------------------------------------------------
% the `song' environment:
\NewDocumentEnvironment {song} { O{}m }
  {
    \int_gincr:N \g__leadsheets_song_id_int
    \tl_set:Nx \l__leadsheets_tmpa_tl
      { song-\int_to_arabic:n { \g__leadsheets_song_id_int } }
    \leadsheets_startsong:nVn {#1} \l__leadsheets_tmpa_tl {#2}
  }
  {}

\group_begin:
% for the \chord shortcut:
\char_set_catcode_active:N \^

% #1: options
% #2: ID
% #3: properties
\cs_new_protected:Npn \leadsheets_startsong:nnn #1#2#3
  {
    \leadsheets_song_define:nn {#2} {#3}
    \leadsheets_set_duplicate_properties:n {#2}
    \leadsheets_check_print:n {#2}
    \setcounter {verse} {0}
    % \cs_if_exist:NF \chord
    %   {
    %     \DeclareDocumentCommand \chord {sm}
    %       { \leadsheets_chord:nn {##1} {##2} }
    %   }
    \group_begin:
      \keys_set:nn {leadsheets} {#1}
      \leadsheets_activate_chords:
      \cs_gset_eq:NN ^ \chord
      \tl_use:N \l__leadsheets_song_format_tl
      \leadsheets_print_song:nwn {#2}
  }
\group_end:
\cs_generate_variant:Nn \leadsheets_startsong:nnn { nV }

% --------------------------------------------------------------------------
% song properties:
\cs_new_protected:Npn \leadsheets_define_property:n #1
  {
    \prop_new:c {l__leadsheets_songs_#1_prop}
    \seq_put_right:Nn \l__leadsheets_song_properties_seq {#1}
  }

\cs_new_protected:Npn \leadsheets_set_property:nnn #1#2#3
  { \prop_gput:cnn {l__leadsheets_songs_#2_prop} {#1} {#3} }
\cs_generate_variant:Nn \leadsheets_set_property:nnn { nnx }

\cs_new:Npn \leadsheets_get_property:nn #1#2
  { \prop_item:cn {l__leadsheets_songs_#2_prop} {#1} }
\cs_generate_variant:Nn \leadsheets_get_property:nn { V }

\prg_new_conditional:Npnn \leadsheets_if_property:nn #1#2 {p,T,F,TF}
  {
    \prop_if_in:cnTF {l__leadsheets_songs_#2_prop} {#1}
      { \prg_return_true: }
      { \prg_return_false: }
  }
\cs_generate_variant:Nn \leadsheets_if_property:nnTF { V }
\cs_generate_variant:Nn \leadsheets_if_property_p:nn { V }

\prg_new_protected_conditional:Npnn \leadsheets_if_properties_eq:nnn #1#2#3 {T,F,TF}
  {
    \tl_if_eq:xxTF
      { \leadsheets_get_property:nn {#1} {#2} }
      { \leadsheets_get_property:nn {#1} {#3} }
      { \prg_return_true: }
      { \prg_return_false: }
  }
\cs_generate_variant:Nn \leadsheets_if_properties_eq:nnnTF { V }

\cs_new_protected:Npn \leadsheets_copy_property:nnn #1#2#3
  {
    \bool_if:nT
      {
        !\leadsheets_if_property_p:nn {#1} {#3}
        &&
        \leadsheets_if_property_p:nn {#1} {#2}
      }
      {
        \leadsheets_set_property:nnx {#1} {#3}
          { \leadsheets_get_property:nn {#1} {#2} }
      }
  }

\cs_new_protected:Npn \leadsheets_duplicate_property:nn #1#2
  { \prop_put:Nnn \l__leadsheets_duplicate_properties_prop {#1} {#2} }

\cs_new_protected:Npn \leadsheets_set_duplicate_properties:n #1
  {
     \prop_map_inline:Nn \l__leadsheets_duplicate_properties_prop
       { \leadsheets_copy_property:nnn {#1} {##1} {##2} }
  }

\cs_new_protected:Npn \leadsheets_print_property_list:nnnnnn #1#2#3#4#5#6
  {
    \seq_set_split:Nnx \l__leadsheets_tmpa_seq {~and~}
      { \leadsheets_get_property:nn {#1} {#2} }
    \seq_clear:N \l__leadsheets_tmpb_seq
    \seq_map_inline:Nn \l__leadsheets_tmpa_seq
      { \seq_put_right:Nn \l__leadsheets_tmpb_seq { #3 {##1} } }
    \seq_use:Nnnn \l__leadsheets_tmpb_seq {#4} {#5} {#6}
  }
\cs_generate_variant:Nn \leadsheets_print_property_list:nnnnnn { V }

\cs_new_protected:Npn \leadsheets_use_property_list:nnnn #1#2#3#4
  {
    \seq_set_split:Nnx \l__leadsheets_tmpa_seq {~and~}
      { \leadsheets_get_property:nn {#1} {#2} }
    \seq_clear:N \l__leadsheets_tmpb_seq
    \seq_map_inline:Nn \l__leadsheets_tmpa_seq
      { \seq_put_right:Nn \l__leadsheets_tmpb_seq { #3 {##1} } }
    \seq_use:Nn \l__leadsheets_tmpb_seq {#4}
  }
\cs_generate_variant:Nn \leadsheets_use_property_list:nnnn { V }

\cs_new:Npn \leadsheets_for_property_list:nn #1#2
  { \__leadsheets_for_property_list_aux:nww {#2} #1 ~and~ \q_stop }
\cs_generate_variant:Nn \leadsheets_for_property_list:nn { f }

\cs_new:Npn \__leadsheets_for_property_list_aux:nww #1#2 ~and~ #3 \q_stop
  {
    #1 { #2 }
    \tl_if_blank:nF {#3}
      { \__leadsheets_for_property_list_aux:nww {#1} #3 \q_stop }
  }

\DeclareExpandableDocumentCommand \songproperty {m}
  { \leadsheets_get_property:Vn \l__leadsheets_current_song_tl {#1} }

% #1: command that formats every entry in list
% #2: property
% #3: separator between two
% #4: separator between more than tow
% #5: separator between last two
\NewDocumentCommand \printsongpropertylist {O{\use:n}mmmm}
  {
    \leadsheets_print_property_list:Vnnnnn \l__leadsheets_current_song_tl
      {#2} {#1} {#3} {#4} {#5}
  }

% #1: command that formats every entry in list
% #2: property
% #3: separator
\NewDocumentCommand \usesongpropertylist {O{\use:n}mm}
  {
    \leadsheets_use_property_list:Vnnn \l__leadsheets_current_song_tl
      {#2} {#1} {#3}
  }

% #1: command that formats every entry in list
% #2: property
\DeclareExpandableDocumentCommand \forsongpropertylist {mm}
  {
    \leadsheets_for_property_list:fn
      { \leadsheets_get_property:Vn \l__leadsheets_current_song_tl {#1} }
       {#2}
  }

\DeclareExpandableDocumentCommand \ifsongproperty {m}
  { \leadsheets_if_property:VnTF \l__leadsheets_current_song_tl {#1} }

\NewDocumentCommand \ifsongpropertiesequal {mm}
  { \leadsheets_if_properties_eq:VnnTF \l__leadsheets_current_song_tl {#1} {#2} }

\NewDocumentCommand \definesongproperty {m}
  { \leadsheets_define_property:n {#1} }
\@onlypreamble\definesongproperty

\NewDocumentCommand \copysongproperty {mm}
  { \leadsheets_duplicate_property:nn {#1} {#2} }
\@onlypreamble\copysongproperty

% --------------------------------------------------------------------------
% predefined properties:
\definesongproperty {title}
\definesongproperty {subtitle}
\definesongproperty {short-title}
\definesongproperty {sort-title}
\definesongproperty {sort-short-title}
\definesongproperty {composer}
\definesongproperty {sort-composer}
\definesongproperty {lyrics}
\definesongproperty {sort-lyrics}
\definesongproperty {arr}
\definesongproperty {sort-arr}
\definesongproperty {band}
\definesongproperty {sort-band}
\definesongproperty {genre}
\definesongproperty {interpret}
\definesongproperty {sort-interpret}
\definesongproperty {key}
\definesongproperty {tempo}
\definesongproperty {tags}
\definesongproperty {counter}
\definesongproperty {ID}

% properties that should take the value of another property if they're not set
% explicitly:
\copysongproperty {composer} {sort-composer}
% \copysongproperty {composer} {lyrics}
\copysongproperty {lyrics} {sort-lyrics}
\copysongproperty {title} {sort-title}
\copysongproperty {short-title} {sort-short-title}
\copysongproperty {arr} {sort-arr}
\copysongproperty {interpret} {sort-interpret}

% --------------------------------------------------------------------------
% defining a new song:
\cs_new_protected:Npn \leadsheets_song_define:nn #1#2
  {
    \seq_if_in:NnTF \l__leadsheets_defined_songs_seq {#1}
      { \ERROR }
      { \seq_put_right:Nn \l__leadsheets_defined_songs_seq {#1} }
    \leadsheets_define_song_properties:n {#1}
    \keys_set:nn {leadsheets/song/#1} {#2}
    \leadsheets_set_property:nnn {#1} {ID} {#1}
    \leadsheets_set_property:nnx {#1} {counter}
      { \int_to_arabic:n {\g__leadsheets_song_id_int} }
  }

\cs_new_protected:Npn \leadsheets_define_song_properties:n #1
  {
    \seq_map_inline:Nn \l__leadsheets_song_properties_seq
      {
        \keys_define:nn {leadsheets/song/#1}
          { ##1 .code:n = \leadsheets_set_property:nnn {#1} {##1} {####1} }
      }
  }

% --------------------------------------------------------------------------
\cs_new:Npn \leadsheets_print_song:nwn #1#2\end#3
  {
    \leadsheets_if_print_song:nT {#1}
      {
          \tl_set:Nn \l__leadsheets_current_song_tl {#1}
          \leadsheets_songtitle:
          \tl_use:N \l__leadsheets_songtext_format_tl
          #2
      }
    \tl_if_eq:nnTF {#3} {song}
      {
        \group_end:
        \end{song}
      }
      {
        \end{#3}
        \__leadsheets_continue_song:nwn {#1}
      }
  }

\cs_new:Npn \__leadsheets_continue_song:nwn #1#2\end#3
  {
    \leadsheets_if_print_song:nT {#1} {#2}
    \tl_if_eq:nnTF {#3} {song}
      {
        \group_end:
        \end{song}
      }
      {
        \end{#3}
        \__leadsheets_continue_song:nwn {#1}
      }
  }

\prg_new_conditional:Npnn \leadsheets_if_print_song:n #1 {T,F,TF}
  {
    \seq_if_in:NnTF \l__leadsheets_songs_print_seq {#1}
      { \prg_return_true: }
      { \prg_return_false: }
  }

\cs_new_protected:Npn \leadsheets_check_print:n #1
  {
    \leadsheets_if_print_tags:nT {#1}
      { \seq_put_right:Nn \l__leadsheets_songs_print_seq {#1} }
  }

\prg_new_protected_conditional:Npnn \leadsheets_if_print_tags:n #1 {T,F,TF}
  {
    \bool_if:NTF \l__leadsheets_print_selected_bool
      {
        \leadsheets_if_property:nnTF {#1} {tags}
          {
            \bool_set_false:N \l__leadsheets_tmpa_bool
            \tl_set:Nx \l__leadsheets_tmpa_tl
              { \leadsheets_get_property:nn {#1} {tags} }
            \clist_map_inline:Nn \l__leadsheets_print_tags_clist
              {
                \clist_if_in:NnT \l__leadsheets_tmpa_tl {##1}
                  {
                    \bool_set_true:N \l__leadsheets_tmpa_bool
                    \clist_map_break:
                  }
              }
            \bool_if:NTF \l__leadsheets_tmpa_bool
              { \prg_return_true: }
              { \prg_return_false: }
          }
          { \prg_return_false: }
      }
      { \prg_return_true: }
  }

\keys_define:nn { leadsheets }
  {
    print-tags .code:n =
      \bool_set_true:N \l__leadsheets_print_selected_bool
      \clist_set:Nn \l__leadsheets_print_tags_clist {#1}
  }

% --------------------------------------------------------------------------
\NewDocumentCommand \songtitle {} { \leadsheets_songtitle: }

% the following is shamelessly adapted from the `needspace' package by
% Peter Wilson and Herries Press
\cs_new:Npn \leadsheets_needspace:n #1
  {
    \group_begin:
      \dim_set:Nn \l__leadsheets_tmpa_dim { #1 }
      \skip_vertical:n { \c_zero_dim + \l__leadsheets_tmpa_dim }
      \tex_penalty:D -100
      \skip_vertical:n { \c_zero_dim - \l__leadsheets_tmpa_dim }
      \skip_vertical:N \l__leadsheets_tmpa_dim
      \tex_penalty:D 9999
      \skip_vertical:n { - \l__leadsheets_tmpa_dim }
      \skip_vertical:N \c_zero_dim
    \group_end:
  }

\cs_new_protected:Npn \leadsheets_songtitle:
  {
    \leadsheets_use_songtitle_template:V \l__leadsheets_songtitle_template_tl
    \leadsheets_needspace:n { 3\baselineskip }
  }

\cs_new_protected:Npn \leadsheets_use_songtitle_template:n #1
  {
    \prop_get:NnNTF \l__leadsheets_songtitle_template_prop
      {#1}
      \l__leadsheets_tmpa_tl
      { \l__leadsheets_tmpa_tl }
      { \ERROR }
  }
\cs_generate_variant:Nn \leadsheets_use_songtitle_template:n { V }

\cs_new_protected:Npn \leadsheets_define_songtitle_template:nn #1#2
  { \prop_put:Nnn \l__leadsheets_songtitle_template_prop {#1} {#2} }


\NewDocumentCommand \definesongtitletemplate {m+m}
  { \leadsheets_define_songtitle_template:nn {#1} {#2} }

\NewDocumentCommand \expandsongpropertycode {+m} { \use:x {#1} }

% --------------------------------------------------------------------------
% predefined templates
\definesongtitletemplate {minimal}
  { \section*{ \songproperty {title} } }

\definesongtitletemplate {tabular}
  {
    \section{ \songproperty {title} }
    \begingroup\footnotesize
    \begin{tabular}{
        @{}
        >{\raggedright\arraybackslash}p{.5\linewidth}
        @{}
        >{\raggedleft\arraybackslash}p{.5\linewidth}
        @{}
      }
      \ifsongproperty{interpret}
        {\GetTranslation{leadsheets/interpret}}
        {}
      \ifsongproperty{composer}
        {
          & \GetTranslation{leadsheets/composer}:~ \songproperty{composer}
          \ifsongpropertiesequal{composer}{lyrics}
            {}
            {\\ & \GetTranslation{leadsheets/lyrics}:~ \songproperty{lyrics}}
        }
        {}
      \ifsongproperty{interpret}{\\}{\ifsongproperty{composer}{\\}{}}
      \ifsongproperty{genre}
        {& Genre:~ \songproperty{genre} \\}
        {}
      \ifsongproperty{tempo}
        {& Tempo:~ \songproperty{tempo} \\}
        {}
      \ifsongproperty{key}
        {& \GetTranslation{leadsheets/key}:~ \songproperty{key} \\}
        {}
    \end{tabular}
    \par\endgroup
  }

% --------------------------------------------------------------------------
\cs_new:Npn \leadsheets_chord_print:n #1 {#1}
\cs_generate_variant:Nn \leadsheets_chord_print:n {V}

\cs_new:Npn \leadsheets_chord:nnn #1#2#3
  {
    \bool_if:NTF #1
      { \bool_set_true:N \l__leadsheets_chord_gobble_after_bool }
      { \bool_set_false:N \l__leadsheets_chord_gobble_after_bool }
    \bool_if:NT #2
      { \bool_set_true:N \g__leadsheets_smash_next_chord_bool }
    \__leadsheets_chord:nwn {#3}
  }

\cs_new:Npn \__leadsheets_chord:nwn #1#2~#3
  {
    \tl_set:Nn \l__leadsheets_current_chord {#1}
    \bool_if:nT
      {
        \leadsheets_if_property_p:Vn \l__leadsheets_current_song_tl {key}
        &&
        \l__leadsheets_transpose_bool
      }
      {
        \leadsheets_transpose:xVN
          { \leadsheets_get_property:Vn \l__leadsheets_current_song_tl {key} }
          \l__leadsheets_transpose_steps_tl
          \l__leadsheets_current_chord
      }
    \leadsheets_place_above:nn
      { \leadsheets_chord_print:V \l__leadsheets_current_chord }
      {
        \tl_if_blank:nTF {#2}
          {\skip_horizontal:N \l__leadsheets_empty_chord_dim}
          {#2}
      }
    \tl_if_blank:nF {#3}
      { \bool_if:NF \l__leadsheets_chord_gobble_after_bool {\c_space_tl} }
    #3
  }

\cs_new:Npn \leadsheets_place_above:nn #1#2
  {
    \group_begin:
      \bool_if:NT \g__leadsheets_smash_next_chord_bool
        {
          \bool_set_true:N \l__leadsheets_smash_chords_bool
          \bool_gset_false:N \g__leadsheets_smash_next_chord_bool
        }
      \linespread{1} \selectfont
      \begin{tabular} [b] {@{}c@{}}
        \bool_if:NTF \l__leadsheets_smash_chords_bool
          {\makebox[0pt][c]{#1}}
          {#1} \\
        #2
      \end{tabular}
    \group_end:
  }

\keys_define:nn {leadsheets}
  {
    smash-chords     .bool_set:N = \l__leadsheets_smash_chords_bool ,
    smash-next-chord .bool_set:N = \g__leadsheets_smash_next_chord_bool ,
    empty-chord-dim  .dim_set:N  = \l__leadsheets_empty_chord_dim
  }

\cs_new_protected:Npn \leadsheets_activate_chords:
  {
    \char_set_catcode_active:N \^
    \char_set_catcode_other:N  \#
  }

\NewDocumentCommand \chord {st-m} { \leadsheets_chord:nnn {#1} {#2} {#3} }

% --------------------------------------------------------------------------
% transposing mechanism:
\cs_new_protected:Npn \leadsheets_define_key:nnn #1#2#3
  {
    \seq_new:c  {g__leadsheets_key_#1_#2_seq}
    \prop_new:c {g__leadsheets_key_#1_#2_prop}
    \seq_gset_from_clist:cn {g__leadsheets_key_#1_#2_seq} {#3}
    % \int_zero:N \l__leadsheets_tmpa_int
    % \seq_map_inline:cn {g__leadsheets_key_#1_#2_seq}
    %   {
    %     \prop_gput:cxx {g__leadsheets_key_#1_#2_prop}
    %       {\int_to_arabic:n {\l__leadsheets_tmpa_int}}
    %       {##1}
    %     \int_incr:N \l__leadsheets_tmpa_int
    %   }
  }

% pitches:
\prop_put:Nnn \l__leadsheets_pitches_prop {C}     {0}
\prop_put:Nnn \l__leadsheets_pitches_prop {Ami}   {0}
\prop_put:Nnn \l__leadsheets_pitches_prop {C#}    {1}
\prop_put:Nnn \l__leadsheets_pitches_prop {A#mi}  {1}
\prop_put:Nnn \l__leadsheets_pitches_prop {Db}    {1}
\prop_put:Nnn \l__leadsheets_pitches_prop {Bbmi}  {1}
\prop_put:Nnn \l__leadsheets_pitches_prop {D}     {2}
\prop_put:Nnn \l__leadsheets_pitches_prop {Bmi}   {2}
\prop_put:Nnn \l__leadsheets_pitches_prop {D#}    {3}
\prop_put:Nnn \l__leadsheets_pitches_prop {F#mi}  {3}
\prop_put:Nnn \l__leadsheets_pitches_prop {Eb}    {3}
\prop_put:Nnn \l__leadsheets_pitches_prop {Cmi}   {3}
\prop_put:Nnn \l__leadsheets_pitches_prop {E}     {4}
\prop_put:Nnn \l__leadsheets_pitches_prop {C#mi}  {4}
\prop_put:Nnn \l__leadsheets_pitches_prop {F}     {5}
\prop_put:Nnn \l__leadsheets_pitches_prop {Dmi}   {5}
\prop_put:Nnn \l__leadsheets_pitches_prop {F#}    {6}
\prop_put:Nnn \l__leadsheets_pitches_prop {D#mi}  {6}
\prop_put:Nnn \l__leadsheets_pitches_prop {Gb}    {6}
\prop_put:Nnn \l__leadsheets_pitches_prop {Ebmi}  {6}
\prop_put:Nnn \l__leadsheets_pitches_prop {G}     {7}
\prop_put:Nnn \l__leadsheets_pitches_prop {Emi}   {7}
\prop_put:Nnn \l__leadsheets_pitches_prop {G#}    {8}
\prop_put:Nnn \l__leadsheets_pitches_prop {E#mi}  {8}
\prop_put:Nnn \l__leadsheets_pitches_prop {Ab}    {8}
\prop_put:Nnn \l__leadsheets_pitches_prop {Fmi}   {8}
\prop_put:Nnn \l__leadsheets_pitches_prop {A}     {9}
\prop_put:Nnn \l__leadsheets_pitches_prop {F#mi}  {9}
\prop_put:Nnn \l__leadsheets_pitches_prop {A#}    {10}
\prop_put:Nnn \l__leadsheets_pitches_prop {F##mi} {10}
\prop_put:Nnn \l__leadsheets_pitches_prop {Bb}    {10}
\prop_put:Nnn \l__leadsheets_pitches_prop {Gmi}   {10}
\prop_put:Nnn \l__leadsheets_pitches_prop {B}     {11}
\prop_put:Nnn \l__leadsheets_pitches_prop {G#mi}  {11}

\seq_set_from_clist:Nn \l__leadsheets_sharps_seq
  {C,Ami,G,Emi,D,Bmi,A,F#mi,E,C#mi,B,G#mi,F#,D#mi}
\seq_set_from_clist:Nn \l__leadsheets_flats_seq
  {C,Ami,F,Dmi,Bb,Gmi,Eb,Cmi,Ab,Fmi,Db,Bbmi,Gb,Ebmi}

\prop_put:Nnn \l__leadsheets_prefer_key_prop {0}  {sharp} % C
\prop_put:Nnn \l__leadsheets_prefer_key_prop {1}  {flat}  % Db
\prop_put:Nnn \l__leadsheets_prefer_key_prop {2}  {sharp} % D
\prop_put:Nnn \l__leadsheets_prefer_key_prop {3}  {flat}  % Eb
\prop_put:Nnn \l__leadsheets_prefer_key_prop {4}  {sharp} % E
\prop_put:Nnn \l__leadsheets_prefer_key_prop {5}  {flat}  % F
\prop_put:Nnn \l__leadsheets_prefer_key_prop {6}  {sharp} % F#
\prop_put:Nnn \l__leadsheets_prefer_key_prop {7}  {sharp} % G
\prop_put:Nnn \l__leadsheets_prefer_key_prop {8}  {flat}  % Ab
\prop_put:Nnn \l__leadsheets_prefer_key_prop {9}  {sharp} % A
\prop_put:Nnn \l__leadsheets_prefer_key_prop {10} {flat}  % Bb
\prop_put:Nnn \l__leadsheets_prefer_key_prop {11} {sharp} % B

\group_begin:
\char_set_catcode_other:N  \#
\leadsheets_define_key:nnn {sharp} {0}  {C,  D,  E,  F,  G,  A,  B}  % C
\leadsheets_define_key:nnn {flat}  {0}  {C,  D,  E,  F,  G,  A,  B}  % C

\leadsheets_define_key:nnn {sharp} {1}  {C#, D#, E#, F#, G#, A#, B#} % C#
\leadsheets_define_key:nnn {flat}  {1}  {Db, Eb, F,  Gb, Ab, Bb, C}  % Db

\leadsheets_define_key:nnn {sharp} {2}  {D,  E,  F#, G,  A,  B,  C#} % D
\leadsheets_define_key:nnn {flat}  {2}  {Ebb,Fb, Gb, Abb,Bbb,Cb, Db} % Ebb

\leadsheets_define_key:nnn {sharp} {3}  {D#, E#, F##,G#, A#, B#, C##}% Eb
\leadsheets_define_key:nnn {flat}  {3}  {Eb, F,  G,  Ab, Bb, C,  D}  % Eb

\leadsheets_define_key:nnn {sharp} {4}  {E,  F#, G#, A,  B,  C#, D#} % E
\leadsheets_define_key:nnn {flat}  {4}  {Fb, Gb, Ab, Bbb,Cb, Db, Eb} % Fb

\leadsheets_define_key:nnn {sharp} {5}  {E#, F##,G##,A#, B#, C##,D##}% E#
\leadsheets_define_key:nnn {flat}  {5}  {F,  G,  A,  Bb, C,  D,  E}  % F

\leadsheets_define_key:nnn {sharp} {6}  {F#, G#, A#, B,  C#, D#, E#} % F#
\leadsheets_define_key:nnn {flat}  {6}  {Gb, Ab, Bb, Cb, Db, Eb, F}  % Gb

\leadsheets_define_key:nnn {sharp} {7}  {G,  A,  B,  C,  D,  E,  F#} % G
\leadsheets_define_key:nnn {flat}  {7}  {Abb,Bbb,Cb, Dbb,Ebb,Fb, Gb} % Abb

\leadsheets_define_key:nnn {sharp} {8}  {G#, A#, B#, C#, D#, E#, F##}% G#
\leadsheets_define_key:nnn {flat}  {8}  {Ab, Bb, C,  Db, Eb, F,  G}  % Ab

\leadsheets_define_key:nnn {sharp} {9}  {A,  B,  C#, D,  E,  F#, G#} % A
\leadsheets_define_key:nnn {flat}  {9}  {Bbb,Cb, Db, Ebb,Fb, Gb, Ab} % Bbb

\leadsheets_define_key:nnn {sharp} {10} {A#, B#, C##,D#, E#, F##,G##}% A#
\leadsheets_define_key:nnn {flat}  {10} {Bb, C,  D,  Eb, F,  G,  A}  % Bb

\leadsheets_define_key:nnn {sharp} {11} {B,  C#, D#, E,  F#, G#, A#} % B
\leadsheets_define_key:nnn {flat}  {11} {Cb, Db, Eb, Fb, Gb, Ab, Bb} % Cb
\group_end:

% #1: key
% #2: semitone steps
% #3: chord
\cs_new_protected:Npn \leadsheets_transpose:nnN #1#2#3
  {
    \int_set:Nn \l__leadsheets_tmpa_int
      { \prop_item:Nn \l__leadsheets_pitches_prop {#1} }
    % \l__leadsheets_tmpa_int holds the current pitch
    \seq_if_in:NnTF \l__leadsheets_sharps_seq {#1}
      { \tl_set:Nn \l__leadsheets_tmpa_tl {sharp} }
      { \tl_set:Nn \l__leadsheets_tmpa_tl {flat} }
    % \l__leadsheets_tmpa_tl holds the `sharp' or `flat' preference
    \int_set:Nn \l__leadsheets_tmpb_int
      { \int_mod:nn { \l__leadsheets_tmpa_int + #2 } {12} }
    \int_while_do:nNnn { \l__leadsheets_tmpb_int } < { 0 }
      { \int_set:Nn \l__leadsheets_tmpb_int { \l__leadsheets_tmpb_int + 12 } }
    % \l__leadsheets_tmpb_int holds the pitch number of the new key
    \bool_if:NTF \l__leadsheets_enharmonic_bool
      { \tl_set_eq:NN \l__leadsheets_tmpb_tl \l__leadsheets_enharmonic_tl }
      {
        \tl_set:Nx \l__leadsheets_tmpb_tl
          {
            \prop_item:NV
              \l__leadsheets_prefer_key_prop
              \l__leadsheets_tmpb_int
          }
      }
    % \l__leadsheets_tmpb_tl holds the `sharp' or `flat' preference of the new key
    \tl_set_eq:NN \l__leadsheets_tmpc_tl #3 % the chord
    \int_zero:N \l__leadsheets_tmpc_int
    \seq_map_inline:cn
      {
        g__leadsheets_key_
        \l__leadsheets_tmpa_tl _
        \int_to_arabic:V \l__leadsheets_tmpa_int
        _seq
      }
      {
        \int_incr:N \l__leadsheets_tmpc_int
        \tl_set:Nx \l__leadsheets_tmpa_tl
          {
            \seq_item:cV
              {
                g__leadsheets_key_
                \l__leadsheets_tmpb_tl _
                \int_to_arabic:V \l__leadsheets_tmpb_int
                _seq
              }
              \l__leadsheets_tmpc_int
          }
        \tl_if_in:NnT \l__leadsheets_tmpc_tl {##1}
          {
            \tl_replace_once:NnV \l__leadsheets_tmpc_tl {##1} \l__leadsheets_tmpa_tl
            \seq_map_break:
          }
      }
    \tl_set_eq:NN #3 \l__leadsheets_tmpc_tl
  }
\cs_generate_variant:Nn \leadsheets_transpose:nnN { xV }

% --------------------------------------------------------------------------
\cs_new:Npn \leadsheets_verse_begin:
  {
    \itemize
    \tl_if_eq:VnTF \l__leadsheets_verse_type_tl {verse}
      {
        \bool_if:NTF \l__leadsheets_verse_numbered_bool
          {
            \refstepcounter{verse}
            \item[\theverse]
          }
          { \item[] }
      }
      { \item[\leadsheets_translation:V \l__leadsheets_verse_type_tl :] }
    \tl_use:N \l__leadsheets_verse_format_tl
  }

\cs_new:Npn \leadsheets_verse_begin_starred:
  {
    \itemize
    \item[]
    \tl_use:N \l__leadsheets_verse_format_tl
  }

\cs_new:Npn \leadsheets_verse_end: { \enditemize }

\newcounter{verse}
\tl_set:Nn \theverse { \arabic {verse} . }

\RenewDocumentEnvironment {verse} {O{}}
  {
    \par
    \keys_set:nn {leadsheets/verse} {#1}
    \leadsheets_verse_begin:
  }
  { \leadsheets_verse_end: \par }

\NewDocumentEnvironment {verse*} {O{}}
  {
    \par
    \keys_set:nn {leadsheets/verse} {#1}
    \leadsheets_verse_begin_starred:
  }
  { \leadsheets_verse_end: \par }

\cs_new_protected:Npn \leadsheets_new_verse_type:Nnn #1#2#3
  {
     \keys_define:nn {leadsheets}
       { verse/type/#2 .code:n = \tl_set:Nn \l__leadsheets_verse_type_tl {#2} }
     \bool_if:NTF #1
       {
         \NewDocumentEnvironment {#2} {O{}}
           { \use:c {verse*} [type={#2},##1] }
           { \use:c {endverse*} }
       }
       {
         \NewDocumentEnvironment {#2} {O{}}
           { \verse[type={#2},##1] }
           { \endverse }
       }
     \DeclareTranslationFallback   {leadsheets/#2} {#3}
     \DeclareTranslation {English} {leadsheets/#2} {#3}
  }

\NewDocumentCommand \newversetype {smm}
  { \leadsheets_new_verse_type:Nnn #1 {#2} {#3} }

\newversetype {chorus}    {Chorus}
\newversetype*{chorus*}   {}
\newversetype {intro}     {Intro}
\newversetype*{intro*}    {Intro}
\newversetype {outro}     {Outro}
\newversetype {interlude} {Interlude}
\newversetype {bridge}    {Bridge}
\newversetype*{info}      {}
\newversetype*{solo*}     {}
\newversetype {solo}      {Solo}

% --------------------------------------------------------------------------

\keys_define:nn { leadsheets }
  {
    title-template  .tl_set:N   = \l__leadsheets_songtitle_template_tl ,
    title-template  .initial:n  = minimal ,
    chord-cs        .code:n     =
      \cs_set_protected:Npn \leadsheets_chord_print:n {#1} ,
    chord-cs        .initial:n  = \chordname ,
    text-format     .tl_set:N   = \l__leadsheets_songtext_format_tl ,
    song-format     .tl_set:N   = \l__leadsheets_song_format_tl ,
    verse/type      .choice: ,
    verse/type/verse   .code:n  =
      \tl_set:Nn \l__leadsheets_verse_type_tl {verse} ,
    verse/type/unknown .code:n  =
      \msg_warning:nnn {leadsheets} {unknown-verse-type} {#1}
      \tl_set:Nn \l__leadsheets_verse_type_tl {verse} ,
    verse/format    .tl_set:N   = \l__leadsheets_verse_format_tl ,
    numbered        .bool_set:N = \l__leadsheets_verse_numbered_bool ,
    remember-chords .bool_set:N = \l__leadsheets_verse_remember_bool ,
    transpose       .code:n     =
      \bool_set_true:N \l__leadsheets_transpose_bool
      \tl_set:Nn \l__leadsheets_transpose_steps_tl {#1} ,
    enharmonic      .choices:nn =
      { sharp , flat }
      {
        \tl_set_eq:NN \l__leadsheets_enharmonic_tl \l_keys_choice_tl
        \bool_set_true:N \l__leadsheets_enharmonic_bool
      }
  }

\NewDocumentCommand \setleadsheets {m}
  { \keys_set:nn {leadsheets} {#1} }

% --------------------------------------------------------------------------

\cs_new:Npn \leadsheets_translation:n #1
  { \GetTranslation{leadsheets/#1} }
\cs_generate_variant:Nn \leadsheets_translation:n { V }

\DeclareTranslation {German}  {leadsheets/chorus} {Refrain}

\DeclareTranslationFallback   {leadsheets/composer} {Composer}
\DeclareTranslation {English} {leadsheets/composer} {Composer}
\DeclareTranslation {German}  {leadsheets/composer} {Komponist}

\DeclareTranslationFallback   {leadsheets/lyrics} {Lyrics}
\DeclareTranslation {English} {leadsheets/lyrics} {Lyrics}
\DeclareTranslation {German}  {leadsheets/lyrics} {Text}

\DeclareTranslationFallback   {leadsheets/key} {Key}
\DeclareTranslation {English} {leadsheets/key} {Key}
\DeclareTranslation {German}  {leadsheets/key} {Tonart}

\DeclareTranslationFallback   {leadsheets/interpret}
  {as~ interpreted~ by~ \songproperty{interpret}}
\DeclareTranslation {English} {leadsheets/interpret}
  {as~ interpreted~ by~ \songproperty{interpret}}
\DeclareTranslation {German}  {leadsheets/interpret}
  {wie~ von~ \songproperty{interpret}~ interpretiert}

% --------------------------------------------------------------------------

\tex_endinput:D

TODO:
 - an option `remember-chords' that makes the first verse in a song remember
   the chords so that in following verses ^ inserts the chord needed
   => ideally the syntax ^{} would still work but maybe then using \chord is
   required if different chords should be used
   => maybe this is not required at all...
 - an option transpose to the song environment.  This should transpose all
   chords in the various verse-like environments
 - indexing based on composers, interprets, song-titles, difficulties
 - don't just use an itemize environment for verses but something where new
   lines are a bit indented... something like in the songs package maybe
   
